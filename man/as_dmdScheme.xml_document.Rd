% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_dmdScheme.xml_document.R
\name{as_dmdScheme.xml_document}
\alias{as_dmdScheme.xml_document}
\title{Convert a exported xml file to a \code{dmdScheme_Set} object}
\usage{
\method{as_dmdScheme}{xml_document}(x, useSchemeInXml = NULL,
  keepData = TRUE, verbose = FALSE)
}
\arguments{
\item{x}{an \code{xml_document} object (from the \code{xml2} package)}

\item{useSchemeInXml}{if \code{TRUE}, use scheme definition in xml and raise
an error if the xml does not contain a scheme definition. If False, use the
scheme definition from the corresponding installed package, even if the xml
contains a scheme definition. if \code{NULL} (the default), use the
definition in the xml if it contains a definition, if not use the
corresponding definition from the installed package.}

\item{keepData}{if \code{FALSE}, only the scheme definition wi=ll be loaded,
i.e. the data discarded}

\item{verbose}{give verbose progress info. Useful for debugging.}
}
\value{
\code{dmdScheme} or descendant object
}
\description{
Depending on the value of \code{useSchemeInXml}, the scheme is automatically
chosen from either in the one in the xml file or chosen based on the property
\code{dmdSchemeName} in the xml file (see below for details). The package
with the scheme definition has to be installed, but it does not has to be
loaded. An error is raised if it does not exist.
}
\examples{
xml <- as_xml(dmdScheme_example)
x <- as_dmdScheme(xml)
all.equal(dmdScheme_example, x)

}
