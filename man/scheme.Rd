% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scheme_install.R, R/scheme_list.R,
%   R/scheme_uninstall.R, R/scheme_use.R
\name{scheme_install}
\alias{scheme_install}
\alias{scheme_default}
\alias{scheme_uninstall}
\alias{scheme_use}
\title{Add \code{schemeDefinition} file to installed schemes}
\usage{
scheme_install(schemeDefinition, overwrite = FALSE)

scheme_default()

scheme_uninstall(schemeName, delete = FALSE)

scheme_use(schemeDefinition = "dmdScheme.xml")
}
\arguments{
\item{schemeDefinition}{file containing the scheme definition in a recognized format}

\item{overwrite}{if \code{TRUE}, the scheme will be overwritten if it exists}

\item{delete}{if \code{TRUE}, the scheme definitions will be deleted, if
\code{FALSE}, the paths will be returned}

\item{schemeDefinition}{complete scheme name \bold{without} the extension}

\item{schemeDefinition}{}
}
\value{
result of \link{file.copy()}

name of the default scheme

if \code{delete = TRUE}, the result from the function
  \link{unlink()}, otherwise the fully qualified paths of the files which
  would be deleted.
}
\description{
Installed schemes are copied to \code{system.file("installedSchemes",
package = "dmdScheme")} and , if necessary, an \code{.xlsx} definition is
saved in addition. These can be listed by using \link{scheme_list()}.

Shows the name of the default scheme which comes with the package and can not be deleted.

Installed schemes are deleted from \code{system.file("installedSchemes",
package = "dmdScheme")}.

Switch from the current scheme to a new scheme as defined in the file
\code{schemeDefinition}. The name of the scheme definition as in the folder \code{}.
New schemes can be added to the library via a call to \code{scheme_add()}.
}
\examples{
scheme_list()
use_scheme("dmdScheme.xml)
use_scheme("dmdScheme.xlsx)
\dontrun{
scheme_install("path/to/definition.xml)
scheme_install("path/to/definition.xlsx)
}
}
