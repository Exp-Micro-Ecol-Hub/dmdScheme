% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dmdScheme_extract.R
\name{dmdScheme_extract}
\alias{dmdScheme_extract}
\title{Split \code{dmdScheme} object into multiple by using \code{DataFileNameMetaData$dataFileName}}
\usage{
dmdScheme_extract(dataFile, x)
}
\arguments{
\item{dataFile}{name of dataFileName whose metadata will be extracted from \code{x}. Has to be an exact match, no wildcards are expanded.}

\item{x}{\code{dmdScheme} object from which data to extract}
}
\value{
\code{dmdScheme} object containing metadata for the data file \code{dataFileName}
}
\description{
One \code{dmdScheme} object can contain metadata for multiple datafiles. For
archiving, these should be split into single \code{dmdScheme} objects, one
for each \code{DataFileNameMetaData$dataFileName}.
The filtering is done as followed:
\describe{
  \item{DataFileMetaDFata}{\code{DataFileMetaData$dataFileName == dataFile}}
  \item{Treatment}{\code{Treatment$parameter \%in\% DataFileMetaData$mappingColumn} and \code{DataFileMetaData$columnData == "Treatment"} }
  \item{Measurement}{\code{Measurement$name \%in\% DataFileMetaData$mappingColumn} and \code{DataFileMetaData$columnData == "Measurement"} }
}
}
\examples{
dmdScheme_extract("smell.csv", dmdScheme_example)
## returns the dmdScheme data for the data file 'smell.csv'

dmdScheme_extract("DoesNotExist", dmdScheme_example)
## returns an empty dmdScheme
}
